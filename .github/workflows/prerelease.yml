name: goreleaser

on:
  push:
    branches:
      - 'master'

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        run: |
          latesttag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo $latesttag
          echo "latesttag=$latesttag" >> $GITHUB_ENV
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@master"
        with:
          version: ${{ latesttag }}  
      - uses: "marvinpinto/action-automatic-releases@latest"
        if:  contains(latesttag, '-rc')
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ latesttag }}"
          prerelease: true
          title: "Pre release ${{ steps.previoustag.outputs.tag }}"
      - uses: "marvinpinto/action-automatic-releases@latest"
        if:  "!contains(latesttag, '-rc')"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.semvers.outputs.v_minor }}-rc"
          prerelease: true
          title: "Pre release ${{ steps.semvers.outputs.v_minor }}-rc"  
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

      
